services:
  mlflow:
    build: ./mlflow
    image: local/mlflow:latest
    container_name: mlflow
    user: "0:0"  # exécuter en root pour éviter les soucis de permissions sur ./data/mlflow
    ports:
      - "5000:5000"
    volumes:
      - ./data/mlflow:/mlflow
    healthcheck:
      # check simple sur la home (HTTP 200). Le trainer, lui, attendra l'API /api/2.0.
      test: ["CMD", "curl", "-fsS", "http://localhost:5000/"]
      interval: 5s
      timeout: 3s
      retries: 120
      start_period: 20s

  trainer:
    build: ./trainer
    image: local/trainer:latest
    container_name: trainer
    depends_on:
      mlflow:
        condition: service_healthy
    environment:
      - MLFLOW_TRACKING_URI=http://mlflow:5000

  serve:
    build: ./serve
    image: local/serve:latest
    container_name: serve
    depends_on:
      mlflow:
        condition: service_healthy
    environment:
      - MLFLOW_TRACKING_URI=http://mlflow:5000
      - MODEL_NAME=CancerClassifier
    ports:
      - "8000:8000"
    healthcheck:
      test: ["CMD", "curl", "-fsS", "http://localhost:8000/health"]
      interval: 5s
      timeout: 3s
      retries: 25
      start_period: 10s

