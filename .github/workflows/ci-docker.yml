name: deploy-mlflow-fastapi

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

concurrency:
  group: deploy-mlflow-fastapi-${{ github.ref }}
  cancel-in-progress: true

jobs:
  deploy:
    runs-on: self-hosted

    steps:
      - uses: actions/checkout@v4

      # Ne rebuild que ce qui change côté app
      - name: Build trainer & serve only
        run: docker compose -f docker-compose.yml build trainer serve

      # Démarrer DB puis recréer MLflow proprement (respecte depends_on)
      - name: Up Postgres
        run: docker compose -f docker-compose.yml up -d postgres

      - name: Recreate MLflow (clean restart)
        run: docker compose -f docker-compose.yml up -d --force-recreate mlflow

      # 1) Attendre la Web UI via l'action (peu bavarde)
      - name: Wait for MLflow Web UI
        uses: jtalk/url-health-check-action@v4
        with:
          url: http://127.0.0.1:5000/
          max-attempts: 45
          retry-delay: 8s
          follow-redirect: false
          retry-all: true

      # 2) Attendre l'API REST depuis l'intérieur du conteneur (plus de "Empty reply")
      - name: Wait for MLflow API (in-container)
        run: >
          docker exec mlflow sh -lc
          'for i in $(seq 1 120); do
             curl -fsS http://localhost:5000/api/2.0/mlflow/experiments/list >/dev/null && exit 0;
             sleep 2;
           done;
           echo "API not ready"; exit 1'

      # Entraîner & enregistrer une nouvelle version du modèle
      - name: Train & register model
        run: docker compose -f docker-compose.yml run --rm trainer

      # (Re)déployer l'API de service
      - name: Up serve
        run: docker compose -f docker-compose.yml up -d serve

      - name: Wait for FastAPI
        uses: jtalk/url-health-check-action@v4
        with:
          url: http://127.0.0.1:8000/health
          max-attempts: 60
          retry-delay: 3s
          follow-redirect: false
          retry-all: true

      # Redémarrer pour charger la dernière version
      - name: Restart serve to load latest model
        run: docker compose -f docker-compose.yml restart serve

      - name: Wait for FastAPI (post-restart)
        uses: jtalk/url-health-check-action@v4
        with:
          url: http://127.0.0.1:8000/health
          max-attempts: 60
          retry-delay: 3s
          follow-redirect: false
          retry-all: true

      - name: Show endpoints
        run: |
          echo "MLflow UI     : http://127.0.0.1:5000"
          echo "FastAPI (docs): http://127.0.0.1:8000/docs"









